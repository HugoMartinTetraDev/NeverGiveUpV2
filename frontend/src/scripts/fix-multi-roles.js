/**
 * Script pour adapter les donn√©es utilisateur au nouveau syst√®me de r√¥les multiples
 * √Ä ex√©cuter dans la console du navigateur
 */
(function() {
  console.log('üîç V√©rification des donn√©es utilisateur dans localStorage...');
  
  // R√©cup√©rer les donn√©es utilisateur
  const userData = localStorage.getItem('user_data');
  if (!userData) {
    console.log('‚ùå Aucune donn√©e utilisateur trouv√©e dans localStorage.');
    return;
  }
  
  try {
    // Parser les donn√©es utilisateur
    const user = JSON.parse(userData);
    console.log('üìä Donn√©es utilisateur actuelles:', user);
    
    // Variables pour suivre les modifications
    let modified = false;
    
    // Cas 1: L'utilisateur a un r√¥le unique mais pas de tableau roles
    if (user.role && (!user.roles || !Array.isArray(user.roles) || user.roles.length === 0)) {
      console.log(`‚úèÔ∏è Conversion du r√¥le unique "${user.role}" en tableau`);
      user.roles = [user.role];
      modified = true;
    }
    
    // Cas 2: L'utilisateur a un tableau roles mais pas de r√¥le unique
    if (user.roles && Array.isArray(user.roles) && user.roles.length > 0 && !user.role) {
      console.log(`‚úèÔ∏è Ajout du premier r√¥le "${user.roles[0]}" comme r√¥le principal`);
      user.role = user.roles[0];
      modified = true;
    }
    
    // Cas 3: Conversion des r√¥les en majuscules pour la coh√©rence
    if (user.role) {
      const upperRole = String(user.role).toUpperCase();
      if (user.role !== upperRole) {
        console.log(`‚úèÔ∏è Conversion du r√¥le principal de "${user.role}" √† "${upperRole}"`);
        user.role = upperRole;
        modified = true;
      }
    }
    
    if (user.roles && Array.isArray(user.roles)) {
      const rolesChanged = user.roles.some((role, index) => {
        const upperRole = String(role).toUpperCase();
        if (role !== upperRole) {
          console.log(`‚úèÔ∏è Conversion du r√¥le "${role}" √† "${upperRole}"`);
          user.roles[index] = upperRole;
          return true;
        }
        return false;
      });
      
      if (rolesChanged) {
        modified = true;
      }
    }
    
    // Sauvegarder les modifications si n√©cessaire
    if (modified) {
      localStorage.setItem('user_data', JSON.stringify(user));
      console.log('‚úÖ Donn√©es utilisateur mises √† jour dans localStorage:', user);
      console.log('üîÑ Veuillez rafra√Æchir la page pour appliquer les changements.');
    } else {
      console.log('‚úÖ Aucune modification n√©cessaire, les donn√©es sont d√©j√† au bon format.');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du traitement des donn√©es utilisateur:', error);
  }
})(); 